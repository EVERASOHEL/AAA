     // Add invoice details
//            PdfPTable invoiceDetailsTable = createInvoiceDetailsTable(font, "INV-2023001", "2023-09-02");
//            document.add(invoiceDetailsTable);

            // Add buyer's info
//            PdfPTable buyerInfoTable = createBuyerInfoTable(font, "Buyer's Name", "Buyer's Address", "GSTIN123456",
//                    "State Name", "+1234567890");
//            document.add(buyerInfoTable);

//            static details
//            PdfPTable staticbuyerInfoTable = staticBuyerInfoTable(font);
//            document.add(staticbuyerInfoTable);

------------------------

   // Dummy sales data
//        List<SalesPurchaseInvoiceDTO> salesItems = Arrays.asList(
//                new SalesPurchaseInvoiceDTO("Product A", 10f, 500f),
//                new SalesPurchaseInvoiceDTO("Product B", 5f, 300f),
//                new SalesPurchaseInvoiceDTO("Product C", 8f, 600f)
//        );
//
//        HttpHeaders headers = new HttpHeaders();
//        headers.setContentType(MediaType.APPLICATION_PDF);
//        headers.setContentDispositionFormData("attachment", "sales-report.pdf");
//        response.setHeader(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=sales-report.pdf");
//
//        generateAndStreamSalesPdf(salesItems, response);

-------------------------

//    public static PdfPTable createInvoiceDetailsTable(Font font, String invoiceNumber, String date) {
//        // Create the table for invoice details
//        String[] invoiceDetailsText = {
//                "Invoice No. \n" + invoiceNumber,
//                "Delivery Note",
//                "Supplier-Ref",
//                "Dated \n" + date,
//                "Mode Term Of Payment",
//                "Other Reference(s)"
//        };
//
//        PdfPTable table = new PdfPTable(1);
//        table.setWidthPercentage(90);
//
//        for (String detailText : invoiceDetailsText) {
//            Paragraph detailParagraph = new Paragraph(detailText, font);
//            PdfPCell detailCell = createPdfPCell("invoiceNo_And_Date", detailParagraph, font);
//            detailCell.setPaddingTop(-5f);
//            detailCell.setMinimumHeight(33f);
//            table.addCell(detailCell);
//        }
//
//        return table;
//    }

//    public static PdfPTable createBuyerInfoTable(Font font, String party_name, String address, String gstin,
//                                                 String stateName, String contactNumber) {
//        PdfPTable table = new PdfPTable(4);
//        table.setWidthPercentage(90);
//
//        PdfPCell cells_2 = new PdfPCell();
//        cells_2.setRowspan(6);
//        cells_2.setColspan(2);
//        cells_2.setPaddingTop(-5f);
//        cells_2.setMinimumHeight(90f);
//        cells_2.setPaddingBottom(5f);
//
//        String[] paragraphTexts = {
//                "Buyer's",
//                party_name,
//                address,
//                "GSTIN/UIN              :   " + gstin,
//                "State Name               :   " + stateName,
//                "Place of Supplay      :   " + stateName,
//                "Contact Person        :   ",
//                !contactNumber.isEmpty() ? "Contact                     :   +91" + contactNumber : "Contact                     :    "
//        };
//
//        for (String paragraphText : paragraphTexts) {
//            Paragraph paragraph = new Paragraph(paragraphText, font);
////            PdfPCell cell = new PdfPCell(paragraph);
//            cells_2.setPaddingTop(-5f);
//            cells_2.addElement(paragraph);
//        }
//
//        table.addCell(cells_2);
//        return table;
//    }
//
//    public static PdfPTable staticBuyerInfoTable(Font font) {
//        PdfPTable table = new PdfPTable(4);
//        table.setWidthPercentage(90);
//
//        String[] paragraphTexts = {
//                "Byer's Order No. \n",
//                "Dated \n",
//                "Despatch Document No \n",
//                "Delivery Note Date. \n",
//                "Despatched throught \n",
//                "Destination \n",
//                "Bill of Lidding/LR-RR No. \n",
//                "Motor Vahical No. \n",
//                "Term of Delivery. \n"
//        };
//
//        for (String paragraphText : paragraphTexts) {
//            PdfPCell cell = createParagraphCell(paragraphText, font);
//            table.addCell(cell);
//        }
//        return table;
//    }

--------------------
 private static PdfPCell createInfoCell(String[] infoTexts, Font font) {
        PdfPCell cell = new PdfPCell();
        cell.setBorder(Rectangle.NO_BORDER);

        for (String infoText : infoTexts) {
            Paragraph paragraph = new Paragraph(infoText, font);
            PdfPCell infoCell = new PdfPCell(paragraph);
            infoCell.setBorder(Rectangle.NO_BORDER);
            cell.addElement(infoCell);
        }

        return cell;
    }
    -------------